name: Astronomer CI - Deploy code

on:
  push:
    branches:
      - main

env:
  ## Sets Deployment API credentials as environment variables
  ASTRO_API_TOKEN: ${{ secrets.ASTRO_API_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install Astro CLI
      run: |
        curl -sSL https://install.astronomer.io | sudo bash -s
        echo "Astro CLI installed successfully"
        astro version

    - name: Create Airflow variables using Astro CLI with loop
      run: |
        echo "Creating Airflow variables directly in the deployment using Astro CLI..."
        
        # Set deployment ID
        DEPLOYMENT_ID="${{ vars.DEPLOYMENT_ID }}"
        
        # Define variables in a structured format
        declare -A variables=(
          ["environment"]="${{ vars.AIRFLOW_ENVIRONMENT || 'production' }}"
          ["api_key"]="${{ secrets.AIRFLOW_API_KEY || 'demo-api-key' }}"
          ["database_url"]="${{ secrets.DATABASE_URL || 'demo-db-url' }}"
          ["deployment_date"]="$(date -u +'%Y-%m-%d_%H:%M:%S')"
          ["deployed_by"]="${{ github.actor }}"
          ["commit_sha"]="${{ github.sha }}"
        )
        
        # Loop through the associative array and create each variable
        for key in "${!variables[@]}"; do
          value="${variables[$key]}"
          echo "Creating variable: $key"
          astro deployment airflow-variable create --deployment-id "$DEPLOYMENT_ID" --key "$key" --value "$value"
        done
        
        echo "Airflow variables created successfully using Astro CLI"

    - name: Deploy to Astro
      uses: astronomer/deploy-action@v0.10.0
      with:
        deployment-id: ${{ vars.DEPLOYMENT_ID }}
        description: "${{ github.actor }} - $(git log -1 --pretty=%B)"
        #pytest: true