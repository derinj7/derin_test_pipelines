name: Astronomer CI - Deploy code

on:
  push:
    branches:
      - main

env:
  ## Sets Deployment API credentials as environment variables
  ASTRO_API_TOKEN: ${{ secrets.ASTRO_API_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install Astro CLI
      run: |
        curl -sSL https://install.astronomer.io | sudo bash -s
        echo "Astro CLI installed successfully"
        astro version

    - name: Create Airflow variables using Astro CLI
      run: |
        echo "Creating Airflow variables directly in the deployment using Astro CLI..."
        
        # Set environment variables for use in commands
        DEPLOYMENT_ID="${{ vars.DEPLOYMENT_ID }}"
        ENVIRONMENT="${{ vars.AIRFLOW_ENVIRONMENT || 'production' }}"
        API_KEY="${{ secrets.AIRFLOW_API_KEY || 'demo-api-key' }}"
        DATABASE_URL="${{ secrets.DATABASE_URL || 'demo-db-url' }}"
        DEPLOYMENT_DATE="$(date -u +'%Y-%m-%d_%H:%M:%S')"
        DEPLOYED_BY="${{ github.actor }}"
        COMMIT_SHA="${{ github.sha }}"
        
        # Create variables using Astro CLI
        astro deployment airflow-variable create --deployment-id "$DEPLOYMENT_ID" --key environment --value "$ENVIRONMENT"
        astro deployment airflow-variable create --deployment-id "$DEPLOYMENT_ID" --key api_key --value "$API_KEY"
        astro deployment airflow-variable create --deployment-id "$DEPLOYMENT_ID" --key database_url --value "$DATABASE_URL"
        astro deployment airflow-variable create --deployment-id "$DEPLOYMENT_ID" --key deployment_date --value "$DEPLOYMENT_DATE"
        astro deployment airflow-variable create --deployment-id "$DEPLOYMENT_ID" --key deployed_by --value "$DEPLOYED_BY"
        astro deployment airflow-variable create --deployment-id "$DEPLOYMENT_ID" --key commit_sha --value "$COMMIT_SHA"
        
        echo "Airflow variables created successfully using Astro CLI"

    - name: Deploy to Astro
      uses: astronomer/deploy-action@v0.10.0
      with:
        deployment-id: ${{ vars.DEPLOYMENT_ID }}
        description: "${{ github.actor }} - $(git log -1 --pretty=%B)"